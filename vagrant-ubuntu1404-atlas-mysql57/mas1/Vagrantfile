# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "ubuntu/trusty64"

  # require "vagrant plugin install vagrant-disksize"
  config.disksize.size = '15GB'

  # machines
  machines = [
    {
      hostname:  "vmubu1404mysql57mas",
      ip:  "192.168.56.141",
      memory:  1536,
      cpus:  1,
      forwarded_ports:  {
        13306 => 3306,  # mysql
      }
    }
  ]

  # provisoner
  require 'yaml'
  yaml_path = "./provisioners.yml"
  if !File.exist?(yaml_path)
    $stderr.puts("provisioners define yaml: #{yaml_path} does not exist")
    exit 1
  end
  provisioner = YAML.load_file(yaml_path)
  platform = provisioner['platform']
  provisioning_scripts = provisioner['scripts']

  machines.each do |m|
    config.vm.define m[:hostname] do |d|
      d.vm.hostname = m[:hostname]
      d.vm.network :private_network, ip: m[:ip]

      d.vm.provider :virtualbox do |vb|
        vb.memory = m[:memory]
        vb.cpus = m[:cpus]
      end

      m[:forwarded_ports].each do |host_port, guest_port|
        d.vm.network :forwarded_port, host: host_port, guest: guest_port
      end

      # provisioning scripts
      provisioning_scripts.each do |prv|
        d.vm.provision :shell do |s|
          s.path = "https://raw.githubusercontent.com/goldeneggg/provisioning-bash/master/facade.sh"
          s.args = [platform, prv["name"]] + prv["args"]
          s.privileged = prv["root"]
        end
      end

      unless ENV['PUB_KEY'].nil?
        d.vm.provision :shell do |s|
          s.privileged = false

          pub_key_content = `cat ~/.ssh/#{ENV['PUB_KEY']}`.chomp!
          s.inline = "echo \"#{pub_key_content}\" >> ~/.ssh/authorized_keys"
        end
      end
    end
  end
end
